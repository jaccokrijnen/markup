
Abstract
==============


Introduction
=============

* problem
* markup languages
* extensibility
* code fragment


Big picture
===================
* Language description (using grammars) -> Document AST -> Semantics description (using ag's)


Context Free Grammars, Abstract syntax, AG's
======================================
* Definitions
	* Grammars
	* Abstract Syntax
	* AG's
		* aspect -> attribute(s) -> rule(s)
* In Haskell
	* murder
	* aspectag
	* used (syntax) extensions: Arrows, idioms, concept van labels (emptydatadecls)
		* important: required extensions per step in the big picture (i.e. NoMonomorphismRestricition in AspectAG)



Primitive productions (tokens from scanner?) & abstract syntax datatype
====================================
* class of languages with own 


Initial grammar & basic semantics
=================================
* markdown, latex, html
* headings, paragraphs, lists, 


Use cases: Table of contents & Math/Code/Syntax highlighting /custom wishes: abstract?
=================================


Common errors
============
* Forgetting to add a (p_constr .=. rule) to the record


Handling indentation & Context*sensitiveness
============================================